===================
Arrays
===================

[
  345,
  10.1,
  10,
  -10,
  null,
  true,
  false,
  { "stuff": "good" }
]

---

(document (array
  (number)
  (number)
  (number)
  (number)
  (null)
  (true)
  (false)
  (object (pair (string) (string)))))

=====================
String content
=====================

[
  "",
  "abc",
  "def\n",
  "ghi\t",
  "jkl\f"
]

----

(document
  (array
    (string)
    (string)
    (string (escape_sequence))
    (string (escape_sequence))
    (string (escape_sequence))))

================================
Top-level object 
================================

{
  "Jake": "the dog",
  "Finn" = "the human"
}

---

(document (object 
  (pair (string) (string))
  (pair (string) (string))
))

================================
Top-level omit curly braces 
================================

"Jake": "the dog",
"Finn" = "the human"

---

(document 
  (pair (string) (string))
  (pair (string) (string))
)

================================
Omit pair separator on object
================================

{
  "Jake": {
    "the": "dog"
  },
  "Finn" {
    "the" = "human"
  }
}

---

(document (object
  (pair 
    (string) 
    (object (pair (string) (string))))
  (pair 
    (string) 
    (object (pair (string) (string))))
))

================================
New line and comma as pair separator
================================

"Jake": "the dog",

"Finn" = "the human"

"Marceline" : "the Vampire Queen"

---

(document 
  (pair (string) (string))
  (pair (string) (string))
  (pair (string) (string))
)

================================
New line and comma as arr separator
================================

[ 1,
  2
  3

  4,
  5,
]

---

(document (array 
  (number)
  (number)
  (number)
  (number)
  (number)
))

================================
New line and comma as obj separator
================================
{
  "Jake": "the dog"
  "Finn" = "the human"

  "Marceline" : "the Vampire Queen",
}
---

(document (object 
  (pair (string) (string))
  (pair (string) (string))
  (pair (string) (string))
))

================================
Unquoted strings
================================
{
  "Jake": the dog,
  Finn = the human
  "Marceline" : "the Vampire Queen",
  Princess.Bubblegum: [
    PB // most common
    Peebles / P-Bubs
    Bub-Bubs
    Princess Bonnibel 'Bonnie' Bubblegum # full name
  ]
}
---

(document (object 
  (pair (string) (unquoted_value (unquoted_string)))
  (pair (unquoted_path) (unquoted_value (unquoted_string)))
  (pair (string) (string))
  (pair (unquoted_path) (array 
    (unquoted_value (unquoted_string)) 
    (comment)
    (unquoted_value (unquoted_string)) 
    (unquoted_value (unquoted_string)) 
    (unquoted_value (unquoted_string)) 
    (comment)
  ))
))

================================
Multiline strings
================================

"key" : """
           mult1line_$tring
           this is \ mu/tiline "string"
           // with all knid of \r characters \t \n inside
        """
"another_key" = this is unquoted_value (unquoted_string)
"super_key" = "this is regular string"

---

(document 
  (pair 
    (string)
    (multiline_string))
  (pair 
    (string)
    (unquoted_value (unquoted_string)))
  (pair 
    (string)
    (string))
)

================================
Substitutions
================================

"Jake": the ${"dog"},
Finn = [${the} hu${?ma}n]
"Marceline" : ${the Vampire Queen},

---

(document 
  (pair 
    (string)
    (unquoted_value 
      (unquoted_string)
      (substitution (string))))
  (pair 
    (unquoted_path)
    (array (unquoted_value
      (substitution (unquoted_path))
      (unquoted_string)
      (substitution (unquoted_path))
      (unquoted_string)
    )))
  (pair 
    (string)
    (unquoted_value (substitution (unquoted_path))))
)

================================
Top-level includes
================================

include "candy_kingdom"
Finn = the human
"Jake": the dog
include required(url("BMO's website"))

---

(document 
  (include (string))
  (pair 
    (unquoted_path)
    (unquoted_value (unquoted_string)))
  (pair 
    (string)
    (unquoted_value (unquoted_string)))
  (include (string)))


================================
Includes inside object
================================

{
  Finn = the human
  include // all citizens of candy kingdom
  "candy_kingdom"
  "Jake": the dog
  include required(url("BMO's website"))
}

---

(document (object
  (pair 
    (unquoted_path)
    (unquoted_value (unquoted_string)))
  (include (comment) (string))
  (pair 
    (string)
    (unquoted_value (unquoted_string)))
  (include (string))))


================================
Text from hocon playground
================================

HOCON = Human-Optimized Config Object Notation

"it's": "a JSON superset",

features: [
    less noisy / less pedantic syntax
    ability to refer to another part of the configuration
    import/include another configuration file into the current file
    a mapping to a flat properties list such as Java's system properties
    ability to get values from environment variables
    # ability to write comments
]

specs url: "https://github.com/lightbend/config/blob/master/HOCON.md"

it's: ${it's}. A ${HOCON}

Try it out: conf is parsed online as you type

---

(document 
  (pair 
    (unquoted_path)
    (unquoted_value (unquoted_string)))
  (pair 
    (string)
    (string))
  (pair
    (unquoted_path)
    (array 
      (unquoted_value (unquoted_string))
      (unquoted_value (unquoted_string))
      (unquoted_value (unquoted_string))
      (unquoted_value (unquoted_string))
      (unquoted_value (unquoted_string))
      (comment)))
  (pair
    (unquoted_path)
    (string))
  (pair
    (unquoted_path)
    (unquoted_value 
      (substitution (unquoted_path))
      (unquoted_string) 
      (substitution (unquoted_path))))
  (pair 
    (unquoted_path)
    (unquoted_value (unquoted_string)))
)


